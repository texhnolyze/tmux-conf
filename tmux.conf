# vim: set foldmethod=marker:
# .tmux.conf
#
# Maintained by Claud D. Park <posquit0.bj@gmail.com>
# http://www.posquit0.com/


### General {{{
  # Use UTF-8 encoding
  set -gq utf8
  set-window-option -gq utf8 on
  # Set scrollback history to 10000 (10k)
  set -g history-limit 10000
  # Visual notification of activity in other windows
  setw -g monitor-activity on
  set -g visual-activity on
  # No automatic renaming of windows (from commands on execution)
  set-window-option -g automatic-rename off
  # Set title, which is also showed at iTerm tab
  # #T      = standard window title (last command, see ~/.bash_profile)
  # #h      = short hostname
  # #S      = session name
  # #I      = tmux window index
  # #W      = tmux window name
  # For special character sequences such as #S, refer to manual
  set-option -g set-titles on
  set-option -g set-titles-string "#I:#W"
### }}}

### Key Bindings {{{
  # Key combination prefix is <C-a>, not <C-b>
  set -g prefix C-a
  unbind-key C-b
  # Use send-prefix to pass C-a through to application
  bind C-a send-prefix

  # Reload ~/.tmux.conf using PREFIX r
  bind r source-file ~/.tmux.conf \; display "Reloaded!"

  # Reduce the command delay time to something a bit shorter
  set -sg escape-time 0
  # Extend the repeat interval for repeatable commands (e.g., resize-pane)
  set -sg repeat-time 1000

  # Enable vi-mode
  setw -g mode-keys vi
  set -g status-keys vi
  # Setup 'v' to begin selection as in Vim
  bind-key -T copy-mode-vi v send -X begin-selection
  bind-key -T copy-mode-vi y send -X copy-selection
  # Smart pane switching with awareness of vim splits
  is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
  bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
  bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
  bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
  bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
  bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
  # Map Vi movement keys as pane movement keys
  bind h select-pane -L
  bind j select-pane -D
  bind k select-pane -U
  bind l select-pane -R
  # Resize panes using PREFIX H, J, K, L
  bind H resize-pane -L 5
  bind J resize-pane -D 5
  bind K resize-pane -U 5
  bind L resize-pane -R 5

  # Use PREFIX | to split window horizontally and PREFIX - to split vertically
  bind | split-window -h
  bind - split-window -v
  # Make the current window the first window
  bind T swap-window -t 1

  # Enable mouse control
  setw -g mouse on
### }}}

### Appereance {{{
  # Set the terminal color to 256color
  set -g default-terminal "rxvt-unicode-256color"
  # Let pane/window numbers be 1-indexed
  set-option -g base-index 1
  set-option -g pane-base-index 1
  # Automatically renumber window numbers on closing a pane (tmux >= 1.7)
  set -g renumber-windows on
  # Enable focus events for terminal that suport them
  set -g focus-events on
  # Set window notifications
  set-window-option -g monitor-activity on
  set-option -g visual-activity on
  # Allow the arrow key to be used immediately after changing windows
  set-option -g repeat-time 0
  # Display tmux messages for 3 seconds
  set -g display-time 3000
  # Enable focus events for terminal that suport them
  set -g focus-events on
  # Enable aggressive-resize that is super useful
  # when using grouped sessions and multi-monitor
  # Enable focus events for terminal that suport them
  set -g focus-events on
  setw -g aggressive-resize on

  ## Status Bar {{
    # Turn the status bar on
    set-option -g status on
    # Set UTF-8 for the status bar
    set -gq status-utf8 on
    # Update status every 5 seconds
    set-option -g status-interval 5
    # Center window list for clarity
    set -g status-justify centre
    # Configure contents in current window status
    setw -g window-status-current-format "<#I:#T>"

    # Configure elemnts to show on left side of the status bar
    set -g status-left-length 70
    set -g status-left "#[fg=colour35] #H"
    set -ga status-left "#[fg=colour243,bold] » #[default]"
    set -ga status-left "#[fg=colour38]#(whoami)"
    set -ga status-left "#[fg=colour243,bold] » #[default]"
    # set -ga status-left "#[fg=colour35]#S"
    # set -ga status-left "#[fg=colour243,bold] » #[default]"
    # Configure elemnts to show on right side of the status bar
    set -g status-right-length 48
    set -g status-right "#[fg=colour243,bold] « #[default]"
    set -ga status-right "#{prefix_highlight}"
    set -ga status-right "#[fg=white,bg=colour64,bold]#{cpu_percentage} #[default]"
    set -ga status-right "#[fg=colour233,bg=colour15] %Y-%m-%d %a %H:%M #[default]"
  ##}}

  ## Color {{
    # Set pane colors for the active pane
    set-option -g pane-border-fg colour235
    set-option -g pane-active-border-fg colour240
    set-option -g pane-active-border-bg black

    # Set message text colors
    set-option -g message-fg colour3
    set-option -g message-bg colour0
    set-option -g message-attr bold

    # Set colors for the status bar
    set-option -g status-fg colour15
    set-option -g status-bg colour0
    set-option -g status-attr dim

    # Set window list colors
    set-window-option -g window-status-fg colour244
    set-window-option -g window-status-bg default
    set-window-option -g window-status-attr dim

    set-window-option -g window-status-current-fg colour1
    set-window-option -g window-status-current-bg default
    set-window-option -g window-status-current-attr bright,bold

    set-window-option -g window-status-activity-fg colour3
    set-window-option -g window-status-activity-bg default
    set-window-option -g window-status-activity-attr dim

    # Set pane number colors
    set-option -g display-panes-active-colour colour208
    set-option -g display-panes-colour colour10

    # Set clock mode colors
    set-window-option -g clock-mode-colour colour160
    set-window-option -g clock-mode-style 24
  ## }}
### }}}

### Plugins {{{
  # List of plugins
  # Supports `github_username/repo` or full URL
  # Examples:
  # github_username/plugin_name
  # git@github.com/user/plugin
  # git@bitbucket.cmo/user/plugin
  set -g @plugin 'tmux-plugins/tpm'
  set -g @plugin 'tmux-plugins/tmux-battery'
  set -g @plugin 'tmux-plugins/tmux-cpu'
  set -g @plugin 'tmux-plugins/tmux-copycat'
  set -g @plugin 'tmux-plugins/tmux-yank'
  set -g @plugin 'tmux-plugins/tmux-open'
  set -g @plugin 'tmux-plugins/tmux-resurrect'
  set -g @plugin 'tmux-plugins/tmux-prefix-highlight'

  ## Shortcuts of plugins
  # TPM
  # <prefix> + I: installs new plugins from GitHub or any other git repository
  # <prefix> + U: updates plugins
  # <prefix> + alt-u: remove/uninstall plugins not on the plugin list
  # Copycat
  # <prefix> + /: regex search
  # <prefix> + ctrl-f : simple file search
  # <prefix> + ctrl-g : jumping over git status files (used after `git status` command)
  # <prefix> + alt-h: jumping over SHA-1 hashes (used after `git log` command)
  # <prefix> + ctrl-u : url search (http, ftp and git urls)
  # <prefix> + ctrl-d : number search (mnemonic d, as digit)
  # <prefix> + alt-i : ip address search
  # n, N: jumps to the next/previous match
  # Enter: To copy a highlighted match (vi mode)
  # ctrl-w / alt-w: To copy a highlighted match (emacs mode)
  # <prefix> + ]: To paste (this is Tmux default paste)
  # Open
  # o: open a highlighted selection with the system default program (open for OS X)
  # ctrl-o: open a highlighted selection with the $EDITOR
  # Resurrect
  # <prefix> + ctrl-s: save
  # <prefix> + ctrl-r: restore

  ## Plugin: Yank {{
    # Allow copy to clipboard with mouse
    set -g @yank_selection_mouse 'clipboard'
  ## }}

  ## Plugin: Resurrect {{
    # Set directory to save TMUX environments
    set -g @resurrect-dir '~/.tmux-resurrect'
    # Enable saving and restoring tmux pane contents
    set -g @resurrect-capture-pane-contents 'on'
    # Configuration for advanced restoring
    set -g @resurrect-processes '                 \
      vi vim nvim gvim emacs man less more tail   \
      top htop glances iotop iftop sudo           \
      ssh irssi weechat weechat-curses mutt       \
      python ipython git tig mysql sqlite3 psql   \
    '
  ## }}
  # Initializes TMUX plugin manager.
  # Keep this line at the very bottom of tmux.conf
  run '~/.tmux/plugins/tpm/tpm'
### }}}
